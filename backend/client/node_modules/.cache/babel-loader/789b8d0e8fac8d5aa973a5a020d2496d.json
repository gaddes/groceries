{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgaddes/projects_local/groceries/src/Home.js\";\nimport React, { Component } from 'react';\nimport './home.scss';\n\nfunction InputBox(props) {\n  return React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"item-input\",\n    type: \"text\",\n    placeholder: \"eggs, chicken, pickles...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"item-add\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Add\"));\n}\n\nfunction SearchBox(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"still in development...\"), React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    onKeyPress: props.onKeyPress,\n    placeholder: \"search...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Clear\")));\n}\n\nfunction ListItems(props) {\n  let items; // Loop through items in state, add each one to array as <li>\n\n  if (props.shoppingListIsBeingEdited) {\n    items = props.items.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, item, React.createElement(\"button\", {\n      key: index,\n      onClick: () => props.onClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Delete\")));\n  } else {\n    items = props.items.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, item));\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"list-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, items);\n}\n\nclass ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchItem = event => {\n      // String representation of key press\n      const newChar = String.fromCharCode(event.charCode);\n      console.log(newChar);\n    };\n\n    this.clearSearch = () => {\n      // Clear state\n      this.setState({\n        currentSearch: ''\n      }); // Clear input box\n\n      document.querySelector(\".search-input\").value = '';\n    };\n\n    this.addItem = () => {\n      // Select input box\n      const inputField = document.querySelector(\".item-input\");\n      const inputContent = inputField.value; // Check not empty\n\n      if (inputContent !== '') {\n        // Update state by concatenating previous state with an array containing only the new item\n        this.setState(previousState => ({\n          items: previousState.items.concat([inputContent])\n        })); // Clear input field\n\n        inputField.value = '';\n      }\n    };\n\n    this.deleteItem = index => {\n      // Update state by filtering previousState so it no longer includes the item corresponding to the clicked delete button\n      this.setState(previousState => ({\n        items: previousState.items.filter((item, key) => key !== index)\n      }));\n    };\n\n    this.editList = () => {\n      if (this.state.shoppingListIsBeingEdited === false) {\n        this.setState({\n          shoppingListIsBeingEdited: true\n        });\n        this.setState({\n          editButtonText: 'Done'\n        });\n      } else {\n        this.setState({\n          shoppingListIsBeingEdited: false\n        });\n        this.setState({\n          editButtonText: 'Edit'\n        });\n      }\n    };\n\n    this.state = {\n      shoppingListIsBeingEdited: false,\n      editButtonText: 'Edit',\n      // NOTE: this list is for testing only - items will be added by using the 'add' function in production\n      items: ['item 1', 'item 2', 'item 3'],\n      currentSearch: ''\n    };\n  }\n\n  componentDidMount() {\n    console.group('componentDidMount');\n    console.log(this.state);\n    console.groupEnd('componentDidMount');\n  }\n\n  componentDidUpdate() {\n    console.group('componentDidUpdate');\n    console.log(this.state);\n    console.groupEnd('componentDidUpdate');\n  }\n  /**\n   * This function performs a live search on the shopping list\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(SearchBox, {\n      currentSearch: this.state.currentSearch,\n      onKeyPress: e => this.searchItem(e),\n      onClick: () => this.clearSearch(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Shopping list\"), React.createElement(\"button\", {\n      className: \"item-edit\",\n      onClick: () => this.editList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.editButtonText)), React.createElement(InputBox, {\n      onClick: () => this.addItem(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(ListItems, {\n      items: this.state.items,\n      shoppingListIsBeingEdited: this.state.shoppingListIsBeingEdited,\n      onClick: index => this.deleteItem(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Home() {\n  return React.createElement(\"div\", {\n    className: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(ShoppingList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/matthewgaddes/projects_local/groceries/src/Home.js"],"names":["React","Component","InputBox","props","onClick","SearchBox","color","onKeyPress","ListItems","items","shoppingListIsBeingEdited","map","item","index","ShoppingList","constructor","searchItem","event","newChar","String","fromCharCode","charCode","console","log","clearSearch","setState","currentSearch","document","querySelector","value","addItem","inputField","inputContent","previousState","concat","deleteItem","filter","key","editList","state","editButtonText","componentDidMount","group","groupEnd","componentDidUpdate","render","e","Home"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './home.scss';\n\nfunction InputBox(props) {\n  return (\n    <div className='flex-row'>\n      <input className='item-input' type='text' placeholder='eggs, chicken, pickles...'></input>\n      <button className='item-add' onClick={props.onClick}>Add</button>\n    </div>\n  );\n}\n\nfunction SearchBox(props) {\n  return (\n    <div>\n      <p style={{color: 'red'}}>still in development...</p>\n      <div className='flex-row'>\n        <input className='search-input' type='text' onKeyPress={props.onKeyPress} placeholder='search...'></input>\n        <button onClick={props.onClick}>Clear</button>\n      </div>\n    </div>\n  );\n}\n\nfunction ListItems(props) {\n  let items;\n  // Loop through items in state, add each one to array as <li>\n  if (props.shoppingListIsBeingEdited) {\n    items = props.items.map((item, index) =>\n      <li key={index}>{item}<button key={index} onClick={() => props.onClick(index)}>Delete</button></li>\n    );\n  } else {\n    items = props.items.map((item, index) =>\n      <li key={index}>{item}</li>\n    );\n  }\n\n  return (\n    <ul className=\"list-items\">\n      {items}\n    </ul>\n  );\n}\n\nclass ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shoppingListIsBeingEdited: false,\n      editButtonText: 'Edit',\n      // NOTE: this list is for testing only - items will be added by using the 'add' function in production\n      items: [\n        'item 1',\n        'item 2',\n        'item 3'\n      ],\n      currentSearch: ''\n    }\n  }\n\n  componentDidMount() {\n    console.group('componentDidMount');\n      console.log(this.state);\n    console.groupEnd('componentDidMount');\n  }\n\n  componentDidUpdate() {\n    console.group('componentDidUpdate');\n      console.log(this.state);\n    console.groupEnd('componentDidUpdate');\n  }\n\n  /**\n   * This function performs a live search on the shopping list\n   */\n  searchItem = (event) => {\n    // String representation of key press\n    const newChar = String.fromCharCode(event.charCode);\n    console.log(newChar);\n    \n  }\n\n  /**\n   * This function clears the search term from state and removes text from the input box\n   */\n  clearSearch = () => {\n    // Clear state\n    this.setState({ currentSearch: '' });\n    // Clear input box\n    document.querySelector(`.search-input`).value = '';\n  }\n\n  /**\n   * This function adds a new item to the list\n   */\n  addItem = () => {\n    // Select input box\n    const inputField = document.querySelector(`.item-input`);\n    const inputContent = inputField.value;\n\n    // Check not empty\n    if (inputContent !== '') {\n      // Update state by concatenating previous state with an array containing only the new item\n      this.setState(previousState => ({ items: previousState.items.concat([inputContent]) }));\n      // Clear input field\n      inputField.value = '';\n    }\n  }\n\n  /**\n   * This function deletes an item from the list\n   * \n   * @param {integer} index - index of item to be deleted\n   */\n  deleteItem = (index) => {\n    // Update state by filtering previousState so it no longer includes the item corresponding to the clicked delete button\n    this.setState(previousState => ({ items: previousState.items.filter((item, key) => key !== index) }));\n  }\n\n  /**\n   * This function sets the state of various attributes,\n   * depending on the state of the edit button\n   */\n  editList = () => {\n    if (this.state.shoppingListIsBeingEdited === false) {\n      this.setState({ shoppingListIsBeingEdited: true });\n      this.setState({ editButtonText: 'Done'});\n    } else {\n      this.setState({ shoppingListIsBeingEdited: false });\n      this.setState({ editButtonText: 'Edit'});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"shopping-list\">\n        <br/>\n        <SearchBox\n          currentSearch={this.state.currentSearch}\n          onKeyPress={(e) => this.searchItem(e)}\n          onClick={() => this.clearSearch()}\n        />\n        <div className='flex-row'>\n          <h2>Shopping list</h2>\n          <button\n            className='item-edit'\n            onClick={() => this.editList()}\n          >\n            {this.state.editButtonText}\n          </button>\n        </div>\n        <InputBox\n          onClick={() => this.addItem()}\n        />\n        <ListItems\n          items={this.state.items}\n          shoppingListIsBeingEdited={this.state.shoppingListIsBeingEdited}\n          onClick={(index) => this.deleteItem(index)}\n        />\n      </div>\n    );\n  }\n}\n\nfunction Home() {\n  return (\n    <div className='home'>\n      <ShoppingList />\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}