{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgaddes/projects_local/groceries/src/Home.js\";\nimport React, { Component } from 'react';\nimport './home.scss';\n\nfunction InputBox(props) {\n  return React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"item-input\",\n    type: \"text\",\n    placeholder: \"eggs, chicken, pickles...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"item-add\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Add\"));\n}\n\nfunction ListItems(props) {\n  // Loop through items in state, add each one to array as <li>\n  const items = props.items.map((item, index) => React.createElement(\"li\", {\n    key: \"item-\".concat(index + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, item));\n  return React.createElement(\"ul\", {\n    className: \"list-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, items);\n}\n\nclass ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = items => {\n      // Select input box\n      const inputField = document.querySelector(\".item-input\");\n      const inputContent = inputField.value; // Check not empty\n\n      if (inputContent !== '') {\n        // Create new array by concatenating existing state with new item\n        const newItems = items.concat([inputContent]);\n        this.setState({\n          items: newItems\n        }); // Clear input field\n\n        inputField.value = '';\n      }\n    };\n\n    this.deleteItem = () => {\n      this.setState({\n        shoppingListIsBeingEdited: true\n      });\n      console.log('item deleted!');\n    };\n\n    this.state = {\n      shoppingListIsBeingEdited: false,\n      // NOTE: this list is for testing only - items will be added by using the 'add' function in production\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    console.group('componentDidMount');\n    console.log(this.state);\n    console.groupEnd('componentDidMount');\n  }\n\n  componentDidUpdate() {\n    console.group('componentDidUpdate');\n    console.log(this.state);\n    console.groupEnd('componentDidUpdate');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Shopping list\"), React.createElement(\"button\", {\n      className: \"item-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Edit\")), React.createElement(InputBox, {\n      onClick: () => this.addItem(this.state.items),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(ListItems, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Home extends Component {\n  /**\n   * TODO: create event listeners to add functionality to buttons on click\n   */\n\n  /**\n   * TODO: Write function that will be called on 'ADD' button click:\n   *  1) Capture text in input box\n   *  2) Create new <li> element\n   *  3) Text of <li> element should match text content in input box\n   *  4) Append new element to DOM at bottom of current <ul>\n   *  5) Remove text in input element\n   */\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     shoppingListIsBeingEdited: false,\n  //     numberOfItems: 0\n  //   }\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(ShoppingList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/matthewgaddes/projects_local/groceries/src/Home.js"],"names":["React","Component","InputBox","props","onClick","ListItems","items","map","item","index","ShoppingList","constructor","addItem","inputField","document","querySelector","inputContent","value","newItems","concat","setState","deleteItem","shoppingListIsBeingEdited","console","log","state","componentDidMount","group","groupEnd","componentDidUpdate","render","Home"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './home.scss';\n\nfunction InputBox(props) {\n  return (\n    <div className='flex-row'>\n      <input className='item-input' type='text' placeholder='eggs, chicken, pickles...'></input>\n      <button className='item-add' onClick={props.onClick}>Add</button>\n    </div>\n  );\n}\n\nfunction ListItems(props) {\n  // Loop through items in state, add each one to array as <li>\n  const items = props.items.map((item, index) =>\n    <li key={`item-${index + 1}`}>{item}</li>\n  );\n\n  return (\n    <ul className=\"list-items\">\n      {items}\n    </ul>\n  );\n}\n\nclass ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shoppingListIsBeingEdited: false,\n      // NOTE: this list is for testing only - items will be added by using the 'add' function in production\n      items: [\n\n      ]\n    }\n  }\n\n  componentDidMount() {\n    console.group('componentDidMount');\n      console.log(this.state);\n    console.groupEnd('componentDidMount');\n  }\n\n  componentDidUpdate() {\n    console.group('componentDidUpdate');\n      console.log(this.state);\n    console.groupEnd('componentDidUpdate');\n  }\n\n  addItem = (items) => {\n    // Select input box\n    const inputField = document.querySelector(`.item-input`);\n    const inputContent = inputField.value;\n    // Check not empty\n    if (inputContent !== '') {\n      // Create new array by concatenating existing state with new item\n      const newItems = items.concat([inputContent]);\n      this.setState({ items: newItems });\n      // Clear input field\n      inputField.value = '';\n    }\n  }\n\n  deleteItem = () => {\n    this.setState({ shoppingListIsBeingEdited: true });\n    console.log('item deleted!');\n  }\n\n  render() {\n    return (\n      <div className=\"shopping-list\">\n        <div className='flex-row'>\n          <h2>Shopping list</h2>\n          <button className='item-edit'>Edit</button>\n        </div>\n        <InputBox\n          onClick={() => this.addItem(this.state.items)}\n        />\n        <ListItems\n          items={this.state.items}\n        />\n      </div>\n    );\n  }\n}\n\nclass Home extends Component {\n  /**\n   * TODO: create event listeners to add functionality to buttons on click\n   */\n\n  /**\n   * TODO: Write function that will be called on 'ADD' button click:\n   *  1) Capture text in input box\n   *  2) Create new <li> element\n   *  3) Text of <li> element should match text content in input box\n   *  4) Append new element to DOM at bottom of current <ul>\n   *  5) Remove text in input element\n   */\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     shoppingListIsBeingEdited: false,\n  //     numberOfItems: 0\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className='home'>\n        <ShoppingList />\n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}