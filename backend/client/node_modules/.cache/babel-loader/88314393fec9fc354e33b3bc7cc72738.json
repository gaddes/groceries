{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgaddes/projects_local/groceries/src/Home.js\";\nimport React, { Component } from 'react';\nimport './home.scss';\n\nfunction InputBox(props) {\n  return React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"item-input\",\n    type: \"text\",\n    placeholder: \"eggs, chicken, pickles...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"item-add\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Add\"));\n}\n\nfunction ListItems(props) {\n  let items; // Loop through items in state, add each one to array as <li>\n\n  if (props.shoppingListIsBeingEdited) {\n    items = props.items.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, item, React.createElement(\"button\", {\n      key: index,\n      onClick: () => props.onClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Delete\")));\n  } else {\n    items = props.items.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, item));\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"list-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, items);\n}\n\nclass ShoppingList extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.addItem = items => {\n      // Select input box\n      const inputField = document.querySelector(\".item-input\");\n      const inputContent = inputField.value; // Check not empty\n\n      if (inputContent !== '') {\n        // Create new array by concatenating existing state with new item\n        const newItems = items.concat([inputContent]);\n        this.setState({\n          items: newItems\n        }); // Clear input field\n\n        inputField.value = '';\n      }\n    };\n\n    this.deleteItem = (props, index) => {\n      // Index of item to be deleted\n      // Current state (array of items)\n      // New state (with item deleted)\n      console.log(props.items);\n      console.log(index);\n    };\n\n    this.editList = () => {\n      if (this.state.shoppingListIsBeingEdited === false) {\n        this.setState({\n          shoppingListIsBeingEdited: true\n        });\n        this.setState({\n          editButtonText: 'Done'\n        });\n      } else {\n        this.setState({\n          shoppingListIsBeingEdited: false\n        });\n        this.setState({\n          editButtonText: 'Edit'\n        });\n      }\n    };\n\n    this.state = {\n      shoppingListIsBeingEdited: false,\n      editButtonText: 'Edit',\n      // NOTE: this list is for testing only - items will be added by using the 'add' function in production\n      items: ['item 1', 'item 2', 'item 3']\n    };\n  }\n\n  componentDidMount() {\n    console.group('componentDidMount');\n    console.log(this.state);\n    console.groupEnd('componentDidMount');\n  }\n\n  componentDidUpdate() {\n    console.group('componentDidUpdate');\n    console.log(this.state);\n    console.groupEnd('componentDidUpdate');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Shopping list\"), React.createElement(\"button\", {\n      className: \"item-edit\",\n      onClick: () => this.editList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.editButtonText)), React.createElement(InputBox, {\n      onClick: () => this.addItem(this.state.items),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(ListItems, {\n      items: this.state.items,\n      shoppingListIsBeingEdited: this.state.shoppingListIsBeingEdited,\n      onClick: index => this.deleteItem(this.state, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Home extends Component {\n  /**\n   * TODO: create event listeners to add functionality to buttons on click\n   */\n\n  /**\n   * TODO: Write function that will be called on 'ADD' button click:\n   *  1) Capture text in input box\n   *  2) Create new <li> element\n   *  3) Text of <li> element should match text content in input box\n   *  4) Append new element to DOM at bottom of current <ul>\n   *  5) Remove text in input element\n   */\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     shoppingListIsBeingEdited: false,\n  //     numberOfItems: 0\n  //   }\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(ShoppingList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/matthewgaddes/projects_local/groceries/src/Home.js"],"names":["React","Component","InputBox","props","onClick","ListItems","items","shoppingListIsBeingEdited","map","item","index","ShoppingList","constructor","addItem","inputField","document","querySelector","inputContent","value","newItems","concat","setState","deleteItem","console","log","editList","state","editButtonText","componentDidMount","group","groupEnd","componentDidUpdate","render","Home"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './home.scss';\n\nfunction InputBox(props) {\n  return (\n    <div className='flex-row'>\n      <input className='item-input' type='text' placeholder='eggs, chicken, pickles...'></input>\n      <button className='item-add' onClick={props.onClick}>Add</button>\n    </div>\n  );\n}\n\nfunction ListItems(props) {\n  let items;\n  // Loop through items in state, add each one to array as <li>\n  if (props.shoppingListIsBeingEdited) {\n    items = props.items.map((item, index) =>\n      <li key={index}>{item}<button key={index} onClick={() => props.onClick(index)}>Delete</button></li>\n    );\n  } else {\n    items = props.items.map((item, index) =>\n      <li key={index}>{item}</li>\n    );\n  }\n\n  return (\n    <ul className=\"list-items\">\n      {items}\n    </ul>\n  );\n}\n\nclass ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shoppingListIsBeingEdited: false,\n      editButtonText: 'Edit',\n      // NOTE: this list is for testing only - items will be added by using the 'add' function in production\n      items: [\n        'item 1',\n        'item 2',\n        'item 3'\n      ]\n    }\n  }\n\n  componentDidMount() {\n    console.group('componentDidMount');\n      console.log(this.state);\n    console.groupEnd('componentDidMount');\n  }\n\n  componentDidUpdate() {\n    console.group('componentDidUpdate');\n      console.log(this.state);\n    console.groupEnd('componentDidUpdate');\n  }\n\n  addItem = (items) => {\n    // Select input box\n    const inputField = document.querySelector(`.item-input`);\n    const inputContent = inputField.value;\n    // Check not empty\n    if (inputContent !== '') {\n      // Create new array by concatenating existing state with new item\n      const newItems = items.concat([inputContent]);\n      this.setState({ items: newItems });\n      // Clear input field\n      inputField.value = '';\n    }\n  }\n\n  deleteItem = (props, index) => {\n    // Index of item to be deleted\n    // Current state (array of items)\n    // New state (with item deleted)\n    console.log(props.items);\n    console.log(index);\n    \n    \n    \n  }\n\n  editList = () => {\n    if (this.state.shoppingListIsBeingEdited === false) {\n      this.setState({ shoppingListIsBeingEdited: true });\n      this.setState({ editButtonText: 'Done'});\n    } else {\n      this.setState({ shoppingListIsBeingEdited: false });\n      this.setState({ editButtonText: 'Edit'});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"shopping-list\">\n        <div className='flex-row'>\n          <h2>Shopping list</h2>\n          <button\n            className='item-edit'\n            onClick={() => this.editList()}\n          >\n            {this.state.editButtonText}\n          </button>\n        </div>\n        <InputBox\n          onClick={() => this.addItem(this.state.items)}\n        />\n        <ListItems\n          items={this.state.items}\n          shoppingListIsBeingEdited={this.state.shoppingListIsBeingEdited}\n          onClick={(index) => this.deleteItem(this.state, index)}\n        />\n      </div>\n    );\n  }\n}\n\nclass Home extends Component {\n  /**\n   * TODO: create event listeners to add functionality to buttons on click\n   */\n\n  /**\n   * TODO: Write function that will be called on 'ADD' button click:\n   *  1) Capture text in input box\n   *  2) Create new <li> element\n   *  3) Text of <li> element should match text content in input box\n   *  4) Append new element to DOM at bottom of current <ul>\n   *  5) Remove text in input element\n   */\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     shoppingListIsBeingEdited: false,\n  //     numberOfItems: 0\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className='home'>\n        <ShoppingList />\n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}